# Заметка пятая(работа со строками)


# Создание строки
# Строка создаётся при помощи символов "_текст_" или '_текст_' или %(_текст_).
# Различие только в том, что строка в опострофах может содержать только текст, а строка в кавычках может притерпивать изменения.
# Строка в кавычках может содержать код, который заключён в #{_код_}.

# Форматирование строк
# \n (переход на новую строку)
# \t (табуляция),
# \\ (обратная косая черта)
# \" (двойная кавычка).


# Пример работы строк, обрамлённых в опострафы:
num = 123
array = [1, 2, 3]
puts "num = " + num.to_s + ", array.size " + array.size.to_s #=> "num = 123, array.size 3?

# Пример работы строк обрамлённых в кавычки:
num = 123
array = [1, 2, 3]
puts "num = #{num.to_s}, array.size #{array.size.to_s}" #=> "num = 123, array.size 3?

# Арифметика строк
# Сложение:
one = "один"
two = "два"
one + " + " + two + " = три!" #=> "один + два = три!"

# Умножение: 
num = 100
"b00m " * num #=> "b00m b00m b00m b00m b00m b00m b00m b00m... b00m"

# Преобразование в массив и обратно ( split, join )
# Split
"str-for-us".split('-') #=> ["str", "for", "us"]
"me&me".split('e') #=> ["m", "&m"]

# Join (возможность использовать как *):
["str", "for", "us"].join('-') #=> "str-for-us"
["you", "me"].join('&') #=> "you&me"
%w[just do it]*"-" #=> "just-do-it"

# Определение длины строки( size )
"many wooooooooooords".size #=> 20

# Получение подстрок
string = "Во дворе дрова, а в дровах трава!"
string[27..-1]     #=> "трава!"
string[27...-1]    #=> "трава"
string[9...14]     #=> "дрова"
string[9..13]      #=> "дрова"

# Если мы укажем число, а не диапазон, то нам будет выдан ASCI код символа:
string = "Во дворе дрова, а в дровах трава!"
string[3]     #=> 190
string[3].chr #=> "д"

# Обратные строки ( reverse )
# Чтобы получить строку, обратную данной, воспользуемся методом reverse
"привет, как дела?)".reverse #=> ")?алед как ,тевирп"

# Делаем замены ( sub, gsub )
# Sub делает одну замену(первую), а gsub заменяет всё.
"my name is Borya".sub("Borya","Pavel") #=> "my name is Pavel"
"my name is Borya. Really Borya?".sub("Borya","Pavel") #=> "my name is Pavel. Really Borya?"
"my name is Borya. Really Borya?".gsub("Borya","Pavel") #=> "my name is Pavel. Really Pavel?"