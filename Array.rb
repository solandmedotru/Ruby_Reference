# Базовая работа с массивами

# Создание массивов ( new, to_a )
Array.new(6){ |index| index + 1 } #=> [1, 2, 3, 4, 5, 6]
(1..6).to_a #=> [1, 2, 3, 4, 5, 6]

# Диапазоны ( N..N )
(1..10).to_a    #=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
("a".."d").to_a #=> ["a", "b", "c", "d"]

# Получение размера массива ( size )
array = [1, "считайте", 3, "количество", 5, 6, "запятых", 2, 5]
array.size    #=> 9

# Поиск максимального/ минимального элемента ( min и max )
["у", "попа", "была", "собака"].max                        #=> "у" максимальный по значению
["у", "попа", "была", "собака"].max_by{ |elem| elem.size } #=> "собака" максимальный по размеру строки

["у", "попа", "была", "собака"].min                        #=> "была" минимальный по значению
["у", "попа", "была", "собака"].min_by{ |elem| elem.size } #=> "у" минимальный по размеру строки

# Упорядочивание ( sort и sort_by )
["у", "попа", "была", "собака"].sort  #=> ["была", "попа", "собака", "у"] сортировка по значению
["у", "попа", "была", "собака"].sort_by{ |elem| elem.size }  #=> ["у", "попа", "была", "собака"] сортировка по размеру строки

#Для двумерных массивов ( sort и sort_by )
[[1,0], [16,6], [2,1], [4,5],[4,0],[5,6]].sort_by {|elem| elem[1]}
#=> [[1, 0], [4, 0], [2, 1], [4, 5], [16, 6], [5, 6]] сортировка "внешних" элементов по значению "внутренних"
[[1,0], [16,6], [2,1], [4,5],[4,0],[5,6]].sort_by {|elem| elem[0]} #=> [[1, 0], [2, 1], [4, 0], [4, 5], [5, 6], [16, 6]]

# Обращение массива ( reverse )
["у", "попа", "была", "собака"].sort.reverse #=> ["у", "собака", "попа", "была"]
["у", "попа", "была", "собака"].sort_by{ |elem| elem.size }.reverse #=> ["собака", "была", "попа", "у"]

# Сложение/ вычитание массивов
[1, 2, 3, 4] + [5, 6, 7] + [8, 9] #=> [1, 2, 3, 4, 5, 6, 7, 8, 9]
[1, 1, 2, 2, 3, 3, 3, 4, 5] - [1, 2, 4] #=> [3, 3, 3, 5]

# Объединение и пересечение массивов (как множеств) ( | и & )
[1, 2, 3, 4, 5, 5, 6] | [0, 1, 2, 3, 4, 5, 7] #=> [1, 2, 3, 4, 5, 6, 0, 7] - объединение
[1, 2, 3, 4, 5, 5, 6] & [0, 2, 1, 3, 5, 4, 7] #=> [1, 2, 3, 4, 5] - пересечение

# Удаление дубликатов ( uniq )
[1, 2, 3, 4, 5, 5, 6, 0, 1, 2, 3, 4, 5, 7].uniq #=> [1, 2, 3, 4, 5, 6, 0, 7]

# Сплющивание массивов ( flatten )
array = [[1, 2], [3, 4]]
array.flatten.max        #=> 4

# Удаление неопределённых (nil) элементов ( compact )
array = [1, nil, 2, nil, 3]
array.compact               #=> [1, 2, 3]

# Транспонирование двумерного массива ( transpose )
array2D = [[1, 2], [3, 4]]
array2D.transpose.map{ |array| array.max } #=> [3, 4]

# Размножение массивов
["много", "денег", "прячет", "тёща"] * 2    #=> ["много", "денег", "прячет", "тёща", "много", "денег", "прячет", "тёща"]

# Функциональность стека ( pop и push )
array = [1, 2, 3, 4, 5]
array.push(6)
array                   #=> [1, 2, 3, 4, 5, 6]
array.pop               #=> 6
array                   #=> [1, 2, 3, 4, 5]

# Функциональность очереди и списка ( shift и unshift )
array = [1, 2, 3, 4, 5]  # добавляем элемент в начало массива
array.unshift(6)    #=> [6, 1, 2, 3, 4, 5]
array.shift         #=> 6 - удаляем из начала массива
array               #=> [1, 2, 3, 4, 5]

# Есть ли элемент в массиве? ( include? )
array = [1, 2, 3, 4, 5, 6, 7]
required = 5                                        # число, которое мы будем искать
array.find_all{ |elem| elem == required }.size != 0 #=> true - это значит, что такое число есть
#или
array = [1, 2, 3, 4, 5, 6, 7]
required = 5                  # число, которое мы будем искать
array.include?(required)      #=> true - что бы это значило?

# Массив пустой? ( empty? )
empty_array = []
filled_array = [1, 2, 2, 3]
empty_array.empty?     #=> true
filled_array.empty?    #=> false

# Массив не пустой? ( any? )
array = [1, 2, 4]
array.length > 0  #=> true
array.empty?      #=> false
array.any?        #=> true